{
  "name": "gamedev-vitegame",
  "productName": "ViteGame",
  "description": "A desktop game built with Electron, React 19, Phaser 3, Vite, and TypeScript.",
  "author": "ViteGame Studio",
  "private": true,
  "version": "0.2.0",
  "_trigger_ci": "Trigger CI/CD pipeline activation",
  "type": "module",
  "main": "dist-electron/electron/main.js",
  "scripts": {
    "dev": "vite",
    "build": "tsc -p electron && tsc -b && vite build && node scripts/ci/postbuild-electron-commonjs.mjs",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "lint": "npm run lint:src && npm run lint:tests",
    "lint:src": "eslint \"src/**/*.{ts,tsx}\" --max-warnings 115",
    "lint:tests": "eslint \"tests/**/*.{ts,tsx,js,mjs}\" --max-warnings 300",
    "lint:baseline": "node scripts/eslint-baseline-gate.mjs",
    "lint:workflows": "node scripts/ci/validate-all-workflows.cjs",
    "guard:clean": "node scripts/ci/clean-file-caches.cjs",
    "format": "prettier . --write",
    "format:check": "prettier . --check",
    "format:observability": "prettier \"src/shared/observability/**/*.{ts,tsx}\" --write",
    "test": "vitest",
    "test:unit": "vitest run",
    "test:unit:watch": "vitest",
    "test:unit:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:coverage:open": "vitest run --coverage && start coverage/index.html",
    "test:coverage:gate": "npm run test:coverage && node scripts/ci/coverage-gate.cjs",
    "test:coverage:dev": "vitest run --coverage --reporter=verbose",
    "preview": "vite preview",
    "electron": "electron .",
    "dev:electron": "npm run build && electron .",
    "build:electron": "tsc -p electron && vite build && electron-builder",
    "build:win": "npm run build:electron -- --win",
    "build:win:dir": "npm run build:electron -- --win --dir",
    "build:dist": "npm run build:electron -- --publish=never",
    "publish:github": "npm run build:electron -- --publish=always",
    "publish:draft": "npm run build:electron -- --publish=always --draft",
    "latest:yml": "node scripts/release/generate-latest-yml.mjs generate",
    "latest:yml:staging": "node scripts/release/generate-latest-yml.mjs generate $npm_package_version 25",
    "latest:yml:update": "node scripts/release/generate-latest-yml.mjs update",
    "security:scan": "electronegativity --input . --output electronegativity-scan.csv --verbose false --electron-version 30.0.0",
    "security:audit": "npm audit --audit-level high",
    "security:audit:gate": "node scripts/security-audit-gate.mjs gate",
    "security:audit:fix": "node scripts/security-audit-gate.mjs fix",
    "security:audit:report": "node scripts/security-audit-gate.mjs report",
    "security:check": "npm run security:scan && npm run security:audit",
    "security:fuses:dev": "node scripts/fuses.js --development",
    "security:fuses:prod": "node scripts/fuses.js --production",
    "cloudevents:check": "node scripts/verify_cloudevents_compliance.mjs",
    "critical:check": "node scripts/critical_conditions_checklist.mjs",
    "pretest:e2e": "node scripts/write-cache-bust.js",
    "validate:cache": "node scripts/validate-cache-system.js",
    "test:e2e": "playwright test",
    "test:e2e:perf-smoke": "playwright test --project=electron-smoke-tests tests/e2e/smoke/perf.spec.ts --workers=1 --retries=0 --reporter=line,json",
    "test:e2e:smoke": "playwright test --grep @smoke --reporter=line",
    "test:e2e:security": "cross-env PROJECT_NAME=electron-security-audit SECURITY_TEST_MODE=true CI=true playwright test --project=electron-security-audit --reporter=github,line --trace=on-first-retry",
    "test:security:electron": "cross-env PROJECT_NAME=electron-security-audit playwright test --project=electron-security-audit --reporter=line",
    "test:security:e2e": "playwright test --project=electron-full-e2e --reporter=json",
    "scan:security": "electronegativity --input . --output security-scan.csv --verbose false --electron-version 30.0.0",
    "collect:traces": "node scripts/ci/collect-playwright-traces.mjs",
    "docs:scan-overlays": "node scripts/scan-overlays.cjs",
    "docs:overlay-map": "node scripts/scan-overlays.cjs",
    "overlay:gen": "node scripts/build-overlay-map.mjs",
    "overlay:check": "git diff --exit-code -- scripts/overlay-map.json",
    "observability:test": "node scripts/verify-observability.js",
    "test:observability": "npm run observability:test",
    "obs:maintain": "node scripts/ci/englishify-observability.mjs && node scripts/ci/normalize-observability-eol.mjs && npm run format:observability",
    "ci:gate:sentry-up": "node scripts/verify-observability.js",
    "ci:gate:workflow": "node scripts/ci/workflow-consistency-check.mjs",
    "pr:performance": "node scripts/pr-integration.mjs analyze",
    "pr:comment": "node scripts/pr-integration.mjs comment",
    "guard:ci-self-check": "node scripts/ci-self-check.mjs",
    "guard:encoding": "node scripts/ci/check-workflows-encoding.mjs",
    "guard:bom": "node scripts/ci/check-bom.mjs",
    "guard:workflow-deps": "node scripts/ci/workflow-dependency-check.cjs",
    "guard:entry": "node scripts/ci/check-electron-entry.cjs",
    "guard:electron": "node scripts/scan_electron_safety.mjs",
    "test:e2e:arch-check": "node scripts/e2e-architecture-check.mjs",
    "test:e2e:framerate": "playwright test --project=framerate-stability",
    "guard:framerate": "node scripts/perf/framerate-stability-gate.mjs",
    "test:e2e:scene-transition": "playwright test --project=scene-transition",
    "guard:scene-transition": "node scripts/perf/scene-transition-gate.mjs",
    "guard:cloudevents": "node scripts/perf/cloudevents-performance-gate.mjs",
    "mcp:context7": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/mcp/start-context7.ps1 -Transport stdio",
    "mcp:context7:http": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/mcp/start-context7.ps1 -Transport http -Port 3037",
    "config:layers:init": "node scripts/config-layers.mjs init",
    "config:layers:export": "node scripts/config-layers.mjs export",
    "config:layers:validate": "node scripts/config-layers.mjs validate",
    "config:layers:report": "node scripts/config-layers.mjs report",
    "config:substitute:validate": "node scripts/config-substitution.mjs --validate",
    "config:substitute:docs": "node scripts/config-substitution.mjs --docs-only",
    "guard:sentry": "node scripts/observability-config-validation.js",
    "guard:quality": "node scripts/quality_gates.mjs",
    "guard:health": "node scripts/ci/release-health-gate.mjs",
    "guard:base": "node scripts/verify_base_clean.mjs",
    "guard:version": "node scripts/version_sync_check.mjs",
    "docs:score:gate": "node scripts/docs-scorer.mjs",
    "guard:adr": "node scripts/validate-task-links.mjs",
    "guard:csp": "node scripts/verify_csp_policy.mjs",
    "guard:bundle": "node scripts/ci/bundle-budget-gate.mjs",
    "guard:web-vitals:hybrid": "node scripts/perf/web-vitals-hybrid-gate.mjs",
    "guard:performance": "node scripts/quality/performance-gates.mjs",
    "guard:db": "node scripts/db-health-check.mjs",
    "encoding:convert:ps": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/windows/convert-to-utf8bom.ps1 .",
    "encoding:convert:ps:dry": "powershell -NoProfile -ExecutionPolicy Bypass -File scripts/windows/convert-to-utf8bom.ps1 . -DryRun",
    "db:checkpoint": "node scripts/db/checkpoint.mjs",
    "db:checkpoint:truncate": "node scripts/db/checkpoint.mjs --truncate",
    "db:backup": "node scripts/db/backup.mjs",
    "db:integrity": "node scripts/db/integrity-check.mjs",
    "db:integrity:quick": "node scripts/db/integrity-check.mjs --quick",
    "release:stage": "node scripts/release/patch-staging-percentage.mjs",
    "release:stage:5": "node scripts/release/patch-staging-percentage.mjs dist/latest.yml 5",
    "release:stage:25": "node scripts/release/patch-staging-percentage.mjs dist/latest.yml 25",
    "release:stage:50": "node scripts/release/patch-staging-percentage.mjs dist/latest.yml 50",
    "release:stage:100": "node scripts/release/patch-staging-percentage.mjs dist/latest.yml 100",
    "release:demo": "node scripts/release/demo-staged-rollout.mjs",
    "release:demo:failure": "node scripts/release/demo-staged-rollout.mjs --simulate-failure",
    "release:rollback": "node scripts/release/execute-rollback.mjs",
    "release:rollback:emergency": "node scripts/release/execute-rollback.mjs --feed=dist/latest.yml",
    "release:rollback:with-version": "node scripts/release/execute-rollback.mjs --feed=dist/latest.yml --previous-version",
    "release:rollback:to-version": "node scripts/release/rollback-feed.mjs",
    "release:manifest:add": "node scripts/release/manage-manifest.mjs add",
    "release:manifest:list": "node scripts/release/manage-manifest.mjs list",
    "release:manifest:validate": "node scripts/release/manage-manifest.mjs validate",
    "release:manifest:cleanup": "node scripts/release/manage-manifest.mjs cleanup",
    "release:health-check": "node scripts/release/auto-rollback.mjs",
    "release:health-check:dry": "DRY_RUN=true node scripts/release/auto-rollback.mjs",
    "release:health-gate": "node scripts/ci/release-health-gate.mjs",
    "quality:bundle:build": "node scripts/quality/bundle-analyzer.mjs",
    "quality:deps": "node scripts/quality/dependency-security.mjs",
    "quality:perf": "node scripts/quality/performance-gates.mjs",
    "guard:ci": "npm run guard:clean && npm run obs:maintain && npm run guard:ci-self-check && npm run typecheck && npm run lint && npm run lint:baseline && npm run lint:workflows && npm run guard:encoding && npm run guard:bom && npm run guard:workflow-deps && npm run guard:entry && npm run test:unit && npm run security:audit:gate && npm run guard:electron && npm run test:e2e:arch-check && npm run test:e2e:framerate && npm run guard:framerate && npm run test:e2e:scene-transition && npm run guard:scene-transition && npm run guard:cloudevents && npm run guard:sentry && npm run test:e2e && npm run collect:traces && npm run guard:quality && npm run guard:health && npm run guard:base && npm run guard:version && npm run docs:score:gate && npm run guard:adr && npm run guard:csp && npm run guard:bundle && npm run guard:web-vitals:hybrid && npm run guard:performance && npm run guard:db && npm run db:checkpoint:truncate && npm run observability:test && npm run pr:performance && npm run quality:bundle:build && npm run quality:deps && npm run quality:perf",
    "sanitize:ascii": "node scripts/sanitize-ascii.mjs",
    "scaffold:new": "node scripts/scaffold/new-project.mjs"
  },
  "dependencies": {
    "@ant-design/icons": "^6.0.0",
    "@brave/brave-search-mcp-server": "^1.3.5",
    "@kazuph/mcp-fetch": "^1.5.0",
    "@modelcontextprotocol/server-filesystem": "^2025.7.29",
    "@modelcontextprotocol/server-sequential-thinking": "^2025.7.1",
    "@opentelemetry/exporter-jaeger": "^2.0.1",
    "@opentelemetry/sdk-trace-base": "^2.0.1",
    "@playwright/test": "1.55.0",
    "@sentry/browser": "^10.5.0",
    "@sentry/electron": "^6.10.0",
    "@sentry/integrations": "^7.120.4",
    "@sentry/node": "^10.5.0",
    "@types/js-yaml": "^4.0.9",
    "@upstash/context7-mcp": "^1.0.14",
    "@zilliz/claude-context-mcp": "0.1.3",
    "ai-sdk-provider-gemini-cli": "^1.1.1",
    "antd": "^5.26.6",
    "cloudevents": "^10.0.0",
    "glob": "^11.0.3",
    "phaser": "^3.90.0",
    "posthog-js": "^1.261.4",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "remark": "^15.0.1",
    "remark-frontmatter": "^5.0.0",
    "remark-gfm": "^4.0.1",
    "remark-parse": "^11.0.0",
    "unified": "^11.0.5",
    "unist-util-visit": "^5.0.0",
    "web-vitals": "^5.1.0"
  },
  "devDependencies": {
    "@doyensec/electronegativity": "^1.9.1",
    "@electron-toolkit/preload": "^3.0.2",
    "@electron-toolkit/utils": "^4.0.0",
    "@electron/fuses": "^1.8.0",
    "@eslint/js": "^9.30.1",
    "@pimzino/claude-code-spec-workflow": "^1.4.4",
    "@sentry/cli": "^2.39.0",
    "@tailwindcss/postcss": "^4.1.12",
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "actionlint": "2.0.6",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "ajv-keywords": "^5.1.0",
    "audit-ci": "^7.1.0",
    "better-sqlite3": "^12.2.0",
    "cross-env": "10.0.0",
    "dotenv": "^17.2.1",
    "electron": "^37.2.4",
    "electron-builder": "^26.0.12",
    "electron-updater": "^6.3.9",
    "eslint": "^9.30.1",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-prettier": "^5.5.3",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "eslint-plugin-security": "^3.0.1",
    "fast-glob": "^3.3.3",
    "globals": "^16.3.0",
    "gray-matter": "^4.0.3",
    "husky": "^9.1.7",
    "js-yaml": "4.1.0",
    "jsdom": "^26.1.0",
    "json-stable-stringify": "1.3.0",
    "json-stringify-pretty-compact": "4.0.0",
    "lint-staged": "^16.1.5",
    "prettier": "^3.6.2",
    "rollup-plugin-visualizer": "^6.0.3",
    "snyk": "^1.1296.0",
    "tailwindcss": "^4.0.0",
    "tsx": "^4.19.2",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.38.0",
    "vite": "^7.0.4",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,css,scss,yaml,yml}": [
      "prettier --write"
    ],
    "src/**/*.{ts,tsx}": [
      "npm run test:unit -- --run --passWithNoTests"
    ]
  }
}
