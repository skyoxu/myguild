# Release Pipeline工具统一安装Action
# 减少Sentry CLI和jq工具在多个job中的重复安装

name: 'Setup Release Tools'
description: '统一安装Release流程需要的工具（Sentry CLI, jq等）'

inputs:
  sentry-token:
    description: 'Sentry认证token'
    required: false
  skip-sentry:
    description: '跳过Sentry CLI安装'
    required: false
    default: 'false'

outputs:
  sentry-version:
    description: '已安装的Sentry CLI版本'
    value: ${{ steps.sentry.outputs.version }}
  tools-ready:
    description: '工具安装是否就绪'
    value: ${{ steps.validate.outputs.ready }}

runs:
  using: 'composite'
  steps:
    - name: 🔍 检查工具缓存
      id: cache
      shell: bash
      run: |
        # 检查工具是否已安装且版本合适
        TOOLS_READY="false"

        if command -v jq >/dev/null 2>&1; then
          echo "✅ jq already installed: $(jq --version)"
          TOOLS_READY="true"
        fi

        if [ "${{ inputs.skip-sentry }}" != "true" ] && npx --yes @sentry/cli --version >/dev/null 2>&1; then
          SENTRY_VER=$(npx --yes @sentry/cli --version 2>/dev/null | head -n1)
          echo "✅ Sentry CLI already available: $SENTRY_VER"
          echo "version=$SENTRY_VER" >> $GITHUB_OUTPUT
        fi

        echo "ready=$TOOLS_READY" >> $GITHUB_OUTPUT

    - name: 🛠️ 安装jq工具 (Windows)
      shell: pwsh
      if: steps.cache.outputs.ready != 'true'
      run: |
        if (-not (Get-Command jq -ErrorAction SilentlyContinue)) {
          Write-Host "📦 Installing jq tool..."
          if (Get-Command choco -ErrorAction SilentlyContinue) {
            choco install jq -y --no-progress
          } elseif (Get-Command winget -ErrorAction SilentlyContinue) {
            winget install stedolan.jq --accept-source-agreements --accept-package-agreements
          } else {
            Write-Host "⚠️ Neither chocolatey nor winget available, trying direct download..."
            Invoke-WebRequest -Uri "https://github.com/stedolan/jq/releases/latest/download/jq-win64.exe" -OutFile "$env:TEMP\jq.exe"
            Move-Item "$env:TEMP\jq.exe" "$env:USERPROFILE\.local\bin\jq.exe" -Force
            echo "$env:USERPROFILE\.local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }
        } else {
          Write-Host "✅ jq already installed"
        }

    - name: 🔧 验证Sentry CLI
      id: sentry
      shell: bash
      if: inputs.skip-sentry != 'true'
      run: |
        echo "🔍 验证Sentry CLI可用性..."
        if ! SENTRY_VER=$(npx --yes @sentry/cli --version 2>/dev/null | head -n1); then
          echo "⚠️ Sentry CLI不可用，但继续执行..."
          SENTRY_VER="unavailable"
        fi
        echo "version=$SENTRY_VER" >> $GITHUB_OUTPUT
        echo "✅ Sentry CLI状态: $SENTRY_VER"
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.sentry-token }}

    - name: ✅ 工具验证完成
      id: validate
      shell: bash
      run: |
        echo "🎯 Release工具安装完成"
        echo "ready=true" >> $GITHUB_OUTPUT
