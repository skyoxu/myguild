name: PR Status Gatekeeper - Windows CI
# Windows CI gatekeeper workflow

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, ready_for_review]

env:
  GATEKEEPER_TIMEOUT: 5

permissions:
  contents: read
  actions: read
  checks: read

# ==================== Concurrency Control ====================
concurrency:
  group: gatekeeper-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ==================== Main Gatekeeper Job ====================
  # Primary job for GitHub Actions status check
  windows-ci-gatekeeper:
    name: Windows CI Status Check
    runs-on: ubuntu-latest # Using Ubuntu runner for efficiency
    timeout-minutes: 35 # Extended timeout to accommodate security gate duration

    # Only run on non-draft PRs
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure logs directory exists
        run: |
          mkdir -p logs/ci

      - name: Wait for "Unified Security Gate" check
        run: node scripts/ci/wait-for-check.mjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_CHECK_NAME: Security Gate (Unified) / Unified Security Gate
          TARGET_JOB_NAME: Unified Security Gate
          TARGET_WORKFLOW_NAME: Security Gate (Unified)
          OPTIONAL: 'true' # 若安全工作流未触发（路径过滤/草稿PR等），跳过等待
          TIMEOUT_MS: '1800000'

      - name: Generate and post PR summary
        run: |
          {
            echo "## PR Status Summary"
            echo "### Windows CI Status"
            echo "- **Status**: Windows-focused CI (Build and Test)"
            echo "- **Environment**: Windows CI with security gates"
            echo ""
            echo "### Details"
            echo "- **Focus**: Windows-focused CI"
            echo "- **Security**: Unified security gate validation"
            echo "- **Priority**: P2 - Critical CI validation"
            echo "---"
            echo "*This gatekeeper ensures Windows CI completion before PR merge*"
          } >> "$GITHUB_STEP_SUMMARY"

  # ==================== Health Check Job ====================
  workflow-health-check:
    name: Workflow Health Check
    runs-on: ubuntu-latest # Using Ubuntu runner for health check
    timeout-minutes: 2

    steps:
      - name: Health status report
        run: |
          {
            echo "## Workflow Health Status"
            echo "- **Version**: v1.0"
            echo "- **Health Check Time**: UTC"
            echo "- **Priority**: P2 - Critical validation"
          } >> "$GITHUB_STEP_SUMMARY"
