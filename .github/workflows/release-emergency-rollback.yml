name: Emergency Rollback

permissions:
  contents: write
  actions: write

defaults:
  run:
    shell: pwsh

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Rollback reason'
        required: true
        type: string
        default: 'Emergency rollback requested'
      target_version:
        description: 'Target version for rollback'
        required: false
        type: string
      feed_files:
        description: 'Feed files to rollback'
        required: false
        type: choice
        options:
          [
            'all',
            'dist/latest.yml',
            'dist/latest-mac.yml',
            'dist/latest-linux.yml',
          ]
        default: 'all'
      triggered_by:
        description: 'Triggered by'
        required: false
        type: string
        default: 'manual'

env:
  PREV_GA_VERSION: ${{ inputs.target_version || vars.PREV_GA_VERSION || '0.0.9' }}
  WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}

# Concurrency control to prevent conflicts
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false # Prevent emergency rollback cancellation

jobs:
  emergency_rollback:
    runs-on: windows-latest
    # Install dev dependencies for this job to access necessary scripts
    env:
      NODE_ENV: development
      NPM_CONFIG_PRODUCTION: 'false'
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    permissions:
      contents: write
      actions: write
    environment:
      name: production
      # Production environment protection for emergency rollback

    steps:
      - name: 'Emergency rollback initiated'
        run: node scripts/ci/rollback-init-summary.mjs
        env:
          REASON: ${{ inputs.reason }}
          TARGET_VERSION: ${{ env.PREV_GA_VERSION }}
          FEED_FILES: ${{ inputs.feed_files }}
          TRIGGERED_BY: ${{ inputs.triggered_by }}

      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 'Install dependencies'
        uses: ./.github/actions/npm-install
        env:
          NPM_CONFIG_PRODUCTION: 'true'

      - name: Install system tools (jq)
        run: node scripts/ci/install-jq-windows.mjs

      - name: Pre-rollback validation
        run: node scripts/ci/emergency-rollback-validate.mjs

      - name: Execute rollback for all feeds
        if: inputs.feed_files == 'all'
        id: rollback_all
        run: node scripts/ci/emergency-rollback-all.mjs
        env:
          PREV_GA_VERSION: ${{ env.PREV_GA_VERSION }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          REASON: ${{ inputs.reason }}

      - name: Execute rollback for single feed
        if: inputs.feed_files != 'all'
        id: rollback_single
        run: node scripts/ci/emergency-rollback-single.mjs
        env:
          FEED_FILE: ${{ inputs.feed_files }}
          PREV_GA_VERSION: ${{ env.PREV_GA_VERSION }}
          REASON: ${{ inputs.reason }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}

      - name: Stop running release ramp workflows
        run: node scripts/ci/stop-running-release-workflows.mjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Send emergency notification
        if: always()
        run: node scripts/ci/emergency-rollback-notify.mjs
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          PREV_GA_VERSION: ${{ env.PREV_GA_VERSION }}
          FEED_FILES: ${{ inputs.feed_files }}
          TRIGGERED_BY: ${{ inputs.triggered_by }}
          REPOSITORY: ${{ github.repository }}
          REASON: ${{ inputs.reason }}

      - name: Commit rollback changes
        run: node scripts/ci/git-conditional-commit-single-file.mjs
        env:
          FILE_PATH: dist/latest.yml
          MESSAGE: "Emergency rollback: v${{ env.PREV_GA_VERSION }}"

      - name: Push emergency changes
        run: node scripts/ci/git-push-current-branch.mjs

      - name: Rollback summary
        if: always()
        run: node scripts/ci/emergency-rollback-summary.mjs
        env:
          TARGET_VERSION: ${{ inputs.target_version || env.PREV_GA_VERSION }}
          REQUESTED_BY: ${{ github.actor }}
          ROLLBACK_RESULTS: ${{ steps.rollback_all.outputs.rollback_results }}
          ROLLBACK_RESULT: ${{ steps.rollback_single.outputs.rollback_result }}
          TRIGGERED_BY: ${{ inputs.triggered_by }}
