name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'electron/**'
      - 'tests/**'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'vite.config.ts'
      - 'vitest.config.ts'
      - 'playwright.config.ts'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'electron/**'
      - 'tests/**'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'vite.config.ts'
      - 'vitest.config.ts'
      - 'playwright.config.ts'
      - '.github/workflows/ci.yml'
  schedule:
    # Daily check - UTC 02:00 (Beijing 10:00)
    - cron: '0 2 * * *'

env:
  NODE_VERSION_MATRIX: '18.x, 20.x, 22.x'
  COVERAGE_THRESHOLD: 90

permissions:
  contents: read
  actions: read

defaults:
  run:
    shell: pwsh

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ==================== Guardian Self-Check ====================
  workflow-guardian:
    name: Workflow Guardian Check
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    timeout-minutes: 5
    # P0: ensure devDependencies installed for job
    env:
      NODE_ENV: development
      NPM_CONFIG_PRODUCTION: 'false'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Step
        uses: raven-actions/actionlint@v2
        with:
          actionlint_flags: "-color"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        uses: ./.github/actions/npm-install

      - name: Step
        run: node scripts/ci/workflow-guardian.mjs

      - name: Step
        run: node scripts/ci/branch-protection-guardian.mjs
        continue-on-error: true # Branch protection check is non-blocking; issues are logged

  # ==================== Quality Gates ====================
  quality-gates:
    name: Quality Gates Check
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    timeout-minutes: 10
    needs: workflow-guardian
    # P0: ensure devDependencies installed for job
    env:
      NODE_ENV: development
      NPM_CONFIG_PRODUCTION: 'false'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        uses: ./.github/actions/npm-install

      - name: Step
        run: npm run lint
        continue-on-error: true

      - name: Step
        run: npm run typecheck

      - name: Step
        run: npm run ci:gate:sentry-up
        timeout-minutes: 2
        continue-on-error: true

      - name: Step
        run: npm run ci:gate:workflow
        timeout-minutes: 2
        continue-on-error: true

  # ==================== Security Scan Stage ====================
  # Note: Security scans moved to unified gate (security-unified.yml)
# Workflow

  # ==================== Stable Core Jobs (Required) ====================
  unit-tests-core:
    name: Unit Tests (windows-latest, Node 20)
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    needs: workflow-guardian
    timeout-minutes: 15
     # P0: ensure devDependencies installed for job
    env:
      NODE_ENV: development
      NPM_CONFIG_PRODUCTION: 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        uses: ./.github/actions/npm-install

      - name: Step
        uses: ./.github/actions/run-tests
        with:
          test-type: coverage
        env:
          NODE_ENV: test
      - name: Step
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-summary
          path: coverage/coverage-summary.json
          retention-days: 14

  coverage-gate:
    name: Coverage Gate
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    needs: unit-tests-core
    timeout-minutes: 5
     # P0: ensure devDependencies installed for job
    env:
      NODE_ENV: development
      NPM_CONFIG_PRODUCTION: 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        uses: ./.github/actions/npm-install
      - name: Validate (coverage config)
        run: node scripts/ci/coverage-config.cjs --verify-only
      - name: Step
        uses: actions/download-artifact@v4
        with:
          name: coverage-summary
          path: coverage/
      - name: Step
        run: node scripts/ci/coverage-gate.cjs
        env:
          COVERAGE_MODE: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
          NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'test' }}

  build-verification-core:
    name: Build Verification (windows-latest)
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    needs: unit-tests-core
    timeout-minutes: 10
    # P0: ensure devDependencies installed for job
    env:
      NODE_ENV: development
      NPM_CONFIG_PRODUCTION: 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        uses: ./.github/actions/npm-install
      - name: Build application
        run: npm run build
      - name: Validate
        run: node scripts/ci/verify-dist-build.mjs

  release-health-gate:
    name: Release Health Gate
    runs-on: windows-latest
    needs: [unit-tests-core, coverage-gate, electron-security-gate]
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install dependencies
        uses: ./.github/actions/npm-install
      - name: Check Sentry token
        id: sentry_check
        run: node scripts/ci/sentry-verify.mjs
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG || '\'default-org'\' }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT || '\'bc660-desktop'\' }}
      - name: Step
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG || 'default-org' }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT || 'bc660-desktop' }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
          SENTRY_RELEASE: ${{ github.sha }}
        if: steps.sentry_check.outputs.token_present == 'true'
        shell: pwsh
        run: node scripts/ci/release-health-gate.mjs
    defaults:
      run:
        shell: pwsh
    needs: quality-gates
    timeout-minutes: 20
     if: |
      contains(github.event.head_commit.message, '[skip-extended]') == false &&
      github.event_name != 'schedule'

    strategy:
      fail-fast: false
      matrix:
        node-version: ['18.x', '20.x', '22.x']
        # Windows-focused strategy: single OS, multiple Node versions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Step
        uses: tj-actions/changed-files@v44
        id: changed-files
        with:
          files: |
            src/**
            tests/**
            *.js
            *.ts
            *.json
            package*.json
            vite.config.*
            tsconfig.json
            *.config.js
            *.config.ts
          files_ignore: |
            docs/**
            *.md
            **/*.md

      - name: Setup Node.js
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: ./.github/actions/npm-install
        with:
          node-version: ${{ matrix.node-version }}

      - name: Step
        if: steps.changed-files.outputs.any_changed == 'true'
        run: npm test
        env:
          NODE_ENV: test

  # ==================== Electron Security Gate ====================
  electron-security-gate:
    name: Electron Security Gate
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    needs: quality-gates
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        uses: ./.github/actions/npm-install

      # Windows runner does not require xvfb for Electron
      - name: Validate
        run: Write-Host "Windows runner detected ($env:RUNNER_OS); Electron smoke runs without xvfb"
          echo "Runner OS: $RUNNER_OS"

      - name: Step
        uses: ./.github/actions/run-tests
        with:
          test-type: security
        env:
          CI: true
          # Windows runner does not require xvfb for Electron
      - name: Run Snyk scan (non-blocking)
        run: node scripts/ci/run-snyk-scan.mjs
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: License summary
        run: node scripts/ci/run-license-summary.mjs
  # ==================== Observability Verification ====================
  observability-verification:
    name: Observability Verification
    runs-on: windows-latest
    needs: unit-tests-core
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        uses: ./.github/actions/npm-install

      - name: Validate
        uses: ./.github/actions/run-tests
        with:
          test-type: observability

      - name: Run observability tests
        run: node scripts/ci/run-observability-tests.mjs

      - name: Step
        uses: actions/upload-artifact@v4
        with:
          name: observability-report
          path: reports/
          retention-days: 14

  # ==================== Performance Benchmarks ====================
  performance-benchmarks:
    name: Performance Benchmarks
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    needs: build-verification-core
    timeout-minutes: 15
     if: |
      contains(github.event.head_commit.message, '[skip-perf]') == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        uses: ./.github/actions/npm-install

      - name: Event loop latency benchmark
        run: node scripts/ci/run-event-loop-benchmark.mjs
      - name: Collect performance metrics (placeholder)
        run: node scripts/ci/perf-metrics-placeholder.mjs

  # ==================== Deployment Readiness ====================
  deployment-readiness:
    name: Deployment Readiness Check
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    needs:
      [
        build-verification-core,
        electron-security-gate,
        observability-verification,
      ]
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deployment summary
        run: echo "Deployment readiness checklist will be attached."

      - name: Generate deployment checklist
        run: node scripts/ci/generate-deployment-checklist.mjs

      - name: Step
        uses: actions/upload-artifact@v4
        with:
          name: deployment-checklist
          path: deployment-checklist.md
          retention-days: 30







