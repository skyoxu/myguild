name: tasks-governance

permissions:
  contents: read
  actions: read

defaults:
  run:
    shell: pwsh

# Infrastructure-level optimization: global environment variables
env:
  NODE_VERSION: '20.x'
  CI_RETRY_COUNT: '3'
  CI_TIMEOUT_MINUTES: '15'
  CACHE_STRATEGY: 'aggressive'

on:
  pull_request:
    paths:
      - 'docs/architecture/overlays/**'
      - 'scripts/overlay-map.json'
      - '.taskmaster/tasks/tasks.json'
      - 'scripts/**'
  push:
    branches: [main]

# ==================== 骞跺彂鎺у埗 ====================
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-tasks:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    timeout-minutes: 15

    # Infrastructure-level optimization: retry strategy
    strategy:
      fail-fast: false
      matrix:
        retry_attempt: [1]

    steps:
      - uses: actions/checkout@v4
        with:
          # Infrastructure optimization: shallow clone for faster checkout
          fetch-depth: 1

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          # Infrastructure optimization: enhanced caching strategy
          cache-dependency-path: |
            package-lock.json
            package.json

      # 鐭 npm 閰嶇疆锛堝彧褰卞搷褰撳墠 CI 鏈猴級
      - name: Normalize npm config on Windows
        shell: bash
        run: |
          # 閬垮厤"鐢熶骇妯″紡"璇激 devDependencies
          npm config delete production || true
          # 鏇挎崲宸插簾寮冪殑 cache-min
          npm config delete cache-min || true
          npm config set prefer-offline true
        # 鑻ヤ綘浠撳簱 .npmrc 纭啓浜?production=true锛屼篃鑳借涓嬮潰 env 瑕嗙洊

      # 瀹夎渚濊禆锛堝姟蹇呭寘鍚?dev锛?      - name: Install deps (include dev)
        shell: bash
        env:
          NPM_CONFIG_PRODUCTION: "false"  # 瑕嗙洊浠讳綍 production=true
          NODE_ENV: "development"         # 閬垮厤 NODE_ENV=production 瑙﹀彂鐪佺暐 dev
        run: npm ci --no-audit --no-fund

      # 楠岃瘉 ESLint锛堢幇鍦ㄥ簲璇ヨ兘鎵惧埌锛?      - name: Verify ESLint availability
        shell: bash
        run: npx -y eslint --version

      # 鑻?overlay-map 鍙嚜鍔ㄧ敓鎴愶紝鍏堥噸寤哄苟寮哄埗"宸叉彁浜や竴鑷?
      # 纭繚Windows鐜鎸塋F褰掍竴鍖?      - if: startsWith(runner.os, 'Windows')
        run: git config --global core.autocrlf input
      - run: node scripts/build-overlay-map.mjs
      - name: ensure overlay-map committed
        shell: bash
        run: |
          set -euo pipefail
          echo "Checking overlay-map.json for changes..."
          if git diff --exit-code scripts/overlay-map.json; then
            echo "?overlay-map.json is up to date"
          else
            echo "?overlay-map.json has changes:"
            git diff scripts/overlay-map.json
            echo "Please commit the updated overlay-map.json"
            exit 1
          fi

      # 瀵屽寲浠诲姟 & 缁撴瀯/寮曠敤鏍￠獙锛圓jv + 鑷畾涔夋牎楠岋級
      - run: node scripts/enrich-tasks.mjs --tasks .taskmaster/tasks/tasks.json --map scripts/overlay-map.json
      - run: node scripts/validate-task-links.mjs --tasks .taskmaster/tasks/tasks.json

