Prepare all required actions
Run ./.github/actions/run-tests
Run set -e
🧪 开始执行security测试...
⏱️ 超时设置: 300000ms
🚨 快速失败: true
npm warn config production Use `--omit=dev` instead.

> gamedev-vitegame@0.1.1 test:e2e:security
> playwright test --project=electron-security-audit --reporter=html


Running 46 tests using 1 worker
[Test] 启动Electron应用进行安全测试...
[Test] 检查主窗口安全配置...
[Test] ✅ 主窗口安全配置验证通过
·[Test] 检查preload API白名单...
[Info] 沙箱模式严格隔离 - 没有API暴露到渲染进程
[Debug] 环境信息: {
  "allWindowProps": [],
  "processAvailable": false,
  "processType": "undefined",
  "contextIsolated": "unknown",
  "contextBridgeAvailable": false,
  "hasElectronGlobals": false
}
[Test] ✅ 沙箱模式严格隔离验证通过 - 没有危险全局变量暴露
·[Test] 测试外部导航拦截...
[Test] ✅ 外部导航拦截验证通过
·[Test] 测试新窗口打开控制...
[Test] ✅ 新窗口打开控制验证通过
·[Test] 测试CSP内联脚本阻止...
[警告] 内联脚本执行成功，可能需要加强CSP策略
[Test] 内联脚本执行状态: true
[Test] CSP错误数量: 0
[Test] ✅ 内联脚本CSP阻止验证通过
·[Test] 测试外部资源CSP策略...
[Test] ✅ 外部资源CSP策略验证通过
·[Test] 验证安全配置不影响基本功能...
[Test] ✅ body 元素存在
Warning:  页面内容较少，但基本DOM结构存在
[Test] ✅ 基本功能验证通过
·[Test] 评估安全配置对性能的影响...
[Test] 页面加载时间: 17ms
[Test] DOM内容加载时间: 16ms
[Test] ✅ 性能影响评估完成
·[Test] 执行安全配置综合评分...
[Test] 安全评分: 100%
[Test] 违规项数量: 0
[Test] ✅ 安全配置100%合规验证通过

=== Electron安全基线测试总结 ===
✅ BrowserWindow安全配置验证
✅ 导航与弹窗拦截验证
✅ CSP策略合规验证
✅ 运行时安全监控
✅ 安全综合评分100%

🛡️ ADR-0002 Electron安全基线验证完成！
·×°°°×°°°F°°°×°°°×°°°F°°°[RedLine] 启动Electron应用进行红线安全测试...

🔴 === 安全红线测试完成 ===
✅ 权限请求拦截验证完成
✅ 外部导航拦截验证完成
✅ 窗口打开拦截验证完成
🛡️ 三大安全红线全部通过！
×°°°°°°°°°°°°[RedLine] 启动Electron应用进行红线安全测试...

🔴 === 安全红线测试完成 ===
✅ 权限请求拦截验证完成
✅ 外部导航拦截验证完成
✅ 窗口打开拦截验证完成
🛡️ 三大安全红线全部通过！
×°°°°°°°°°°°°[RedLine] 启动Electron应用进行红线安全测试...

🔴 === 安全红线测试完成 ===
✅ 权限请求拦截验证完成
✅ 外部导航拦截验证完成
✅ 窗口打开拦截验证完成
🛡️ 三大安全红线全部通过！
F°°°°°°°°°°°°🚀 启动简化安全红线测试...
✅ 应用启动成功
🔍 测试外部导航拦截...
✅ 外部导航拦截验证通过
·🔍 测试新窗口打开拦截...
✅ 新窗口打开拦截验证通过
·🔍 测试权限请求拒绝...
✅ 权限请求拒绝验证通过
·🔍 执行三条红线综合测试...
📊 综合结果: 导航1/1, 窗口1/1, 权限1/1
✅ 三条红线综合验证通过

==================================================
🛡️ 安全红线测试完成
==================================================
✅ 红线 1: 外部导航拦截
✅ 红线 2: 新窗口打开拦截
✅ 红线 3: 敏感权限拒绝
🎯 验收：三条红线用例稳定通过
==================================================
·🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试外部导航拦截 (window.location.href)...
原始 URL: chrome-error://chromewebdata/
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试外部导航拦截 (window.location.href)...
原始 URL: chrome-error://chromewebdata/
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试外部导航拦截 (window.location.href)...
原始 URL: chrome-error://chromewebdata/
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
F🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试外部链接点击拦截...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试外部链接点击拦截...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================

×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试外部链接点击拦截...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
F🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试 window.open() 拦截...
  - 尝试打开: https://malicious-popup.com
  - 窗口被阻止: true
  - 尝试打开: http://adware.com/install
  - 窗口被阻止: true
  - 尝试打开: https://social-engineering.com/survey
  - 窗口被阻止: true
  - 尝试打开: javascript:alert("XSS")
  - 窗口被阻止: true
✅ window.open() 拦截验证通过
·🔍 测试 target="_blank" 链接拦截...
  - target="_blank" 链接: https://malware-download.com/trojan.exe
  - 链接被阻止: true
  - target="_blank" 链接: http://phishing.site/login
  - 链接被阻止: true
  - target="_blank" 链接: https://cryptocurrency-scam.com
  - 链接被阻止: true
✅ target="_blank" 链接拦截验证通过
·🔍 测试摄像头权限拒绝...
  - 摄像头权限被拒绝: true
  - 错误类型: TypeError
✅ 摄像头权限拒绝验证通过
·🔍 测试麦克风权限拒绝...
  - 麦克风权限被拒绝: true
  - 错误类型: TypeError
✅ 麦克风权限拒绝验证通过
·🔍 测试地理位置权限拒绝...
  - 地理位置权限被拒绝: true
  - 错误代码: 1
✅ 地理位置权限拒绝验证通过
·🔍 测试通知权限拒绝...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试通知权限拒绝...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 测试通知权限拒绝...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
T🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 执行三条红线综合稳定性测试...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 执行三条红线综合稳定性测试...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 执行三条红线综合稳定性测试...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
F🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 验证安全配置在会话中的持久性...
  - 执行第 1 轮安全验证...
  - 执行第 2 轮安全验证...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 验证安全配置在会话中的持久性...
  - 执行第 1 轮安全验证...
  - 执行第 2 轮安全验证...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
×🚀 启动 Electron 应用进行安全红线测试...
✅ Electron 应用启动完成
🔍 验证安全配置在会话中的持久性...
  - 执行第 1 轮安全验证...
  - 执行第 2 轮安全验证...
🧹 关闭 Electron 应用...

============================================================
🛡️ 安全 E2E 红线用例测试完成
============================================================
✅ 红线用例 1: 导航拦截（默认拒绝）
   - 外部导航 window.location.href 被拦截
   - 外部链接点击被拦截

✅ 红线用例 2: 窗口打开拦截（默认拒绝）
   - window.open() 被拦截
   - target="_blank" 链接被拦截

✅ 红线用例 3: 权限请求拒绝（默认拒绝）
   - 摄像头权限被拒绝
   - 麦克风权限被拒绝
   - 地理位置权限被拒绝
   - 通知权限被拒绝

🎯 验收标准：三条红线用例稳定通过 ✅
📋 基于：Electron 官方安全清单实现
============================================================
F××F××F

  1) [electron-security-audit] › tests\e2e\security\enhanced\enhanced-csp-security.spec.ts:44:3 › CSP策略安全验证 › CSP应该阻止内联脚本执行 

    TimeoutError: page.waitForFunction: Timeout 30000ms exceeded.

      26 |
      27 |     // 使用更健壮的等待策略
    > 28 |     await page.waitForFunction(
         |                ^
      29 |       () => ['interactive', 'complete'].includes(document.readyState),
      30 |       { timeout: 15000 }
      31 |     );
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\enhanced-csp-security.spec.ts:28:16

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: page.waitForFunction: Timeout 30000ms exceeded.

      26 |
      27 |     // 使用更健壮的等待策略
    > 28 |     await page.waitForFunction(
         |                ^
      29 |       () => ['interactive', 'complete'].includes(document.readyState),
      30 |       { timeout: 15000 }
      31 |     );
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\enhanced-csp-security.spec.ts:28:16

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-enhanced-enhanced-db029-ity-CSP策略安全验证-CSP应该阻止内联脚本执行-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-enhanced-enhanced-db029-ity-CSP策略安全验证-CSP应该阻止内联脚本执行-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: page.waitForFunction: Timeout 30000ms exceeded.

      26 |
      27 |     // 使用更健壮的等待策略
    > 28 |     await page.waitForFunction(
         |                ^
      29 |       () => ['interactive', 'complete'].includes(document.readyState),
      30 |       { timeout: 15000 }
      31 |     );
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\enhanced-csp-security.spec.ts:28:16

  2) [electron-security-audit] › tests\e2e\security\enhanced\enhanced-electron-security.spec.ts:44:3 › Electron安全基线验证 › 渲染进程应该无法访问Node.js API 

    TimeoutError: page.waitForFunction: Timeout 30000ms exceeded.

      26 |
      27 |     // 使用更健壮的等待策略
    > 28 |     await page.waitForFunction(
         |                ^
      29 |       () => ['interactive', 'complete'].includes(document.readyState),
      30 |       { timeout: 15000 }
      31 |     );
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\enhanced-electron-security.spec.ts:28:16

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: page.waitForFunction: Timeout 30000ms exceeded.

      26 |
      27 |     // 使用更健壮的等待策略
    > 28 |     await page.waitForFunction(
         |                ^
      29 |       () => ['interactive', 'complete'].includes(document.readyState),
      30 |       { timeout: 15000 }
      31 |     );
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\enhanced-electron-security.spec.ts:28:16

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-enhanced-enhanced-5aedb-全基线验证-渲染进程应该无法访问Node-js-API-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-enhanced-enhanced-5aedb-全基线验证-渲染进程应该无法访问Node-js-API-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: page.waitForFunction: Timeout 30000ms exceeded.

      26 |
      27 |     // 使用更健壮的等待策略
    > 28 |     await page.waitForFunction(
         |                ^
      29 |       () => ['interactive', 'complete'].includes(document.readyState),
      30 |       { timeout: 15000 }
      31 |     );
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\enhanced-electron-security.spec.ts:28:16

  3) [electron-security-audit] › tests\e2e\security\enhanced\security-redlines.spec.ts:57:5 › 🔴 Electron安全红线测试 - ADR-0002核心拦截 › 红线1: 权限请求拦截 (默认拒绝) › 地理位置权限应被默认拒绝 

    TimeoutError: electron.launch: Timeout 30000ms exceeded.
    Call log:
      - <launching> "D:\a\myguild\myguild\node_modules\electron\dist\electron.exe" "-r" "D:\a\myguild\myguild\node_modules\playwright-core\lib\server\electron\loader.js" "--inspect=0" "--remote-debugging-port=0" "./electron/main.js"
      - <launched> pid=5572
      - [pid=5572][out]
      - [pid=5572][err] Debugger listening on ws://127.0.0.1:63474/07bd2417-9f6d-4f2d-a8a4-7c944cb41df6
      - [pid=5572][err] For help, see: https://nodejs.org/en/docs/inspector
      - <ws connecting> ws://127.0.0.1:63474/07bd2417-9f6d-4f2d-a8a4-7c944cb41df6
      - <ws connected> ws://127.0.0.1:63474/07bd2417-9f6d-4f2d-a8a4-7c944cb41df6
      - [pid=5572][err] Debugger attached.


      21 |   console.log('[RedLine] 启动Electron应用进行红线安全测试...');
      22 |
    > 23 |   electronApp = await electron.launch({
         |                 ^
      24 |     args: ['./electron/main.js'],
      25 |     timeout: 30000,
      26 |     recordVideo: process.env.CI
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\security-redlines.spec.ts:23:17

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: electron.launch: Timeout 30000ms exceeded.
    Call log:
      - <launching> "D:\a\myguild\myguild\node_modules\electron\dist\electron.exe" "-r" "D:\a\myguild\myguild\node_modules\playwright-core\lib\server\electron\loader.js" "--inspect=0" "--remote-debugging-port=0" "./electron/main.js"
      - <launched> pid=1372
      - [pid=1372][out]
      - [pid=1372][err] Debugger listening on ws://127.0.0.1:63489/4373e950-9ad6-48af-9367-6588fb58b2fe
      - [pid=1372][err] For help, see: https://nodejs.org/en/docs/inspector
      - <ws connecting> ws://127.0.0.1:63489/4373e950-9ad6-48af-9367-6588fb58b2fe
      - <ws connected> ws://127.0.0.1:63489/4373e950-9ad6-48af-9367-6588fb58b2fe
      - [pid=1372][err] Debugger attached.


      21 |   console.log('[RedLine] 启动Electron应用进行红线安全测试...');
      22 |
    > 23 |   electronApp = await electron.launch({
         |                 ^
      24 |     args: ['./electron/main.js'],
      25 |     timeout: 30000,
      26 |     recordVideo: process.env.CI
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\security-redlines.spec.ts:23:17

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-enhanced-security-d3f20-线1-权限请求拦截-默认拒绝-地理位置权限应被默认拒绝-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-enhanced-security-d3f20-线1-权限请求拦截-默认拒绝-地理位置权限应被默认拒绝-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: electron.launch: Timeout 30000ms exceeded.
    Call log:
      - <launching> "D:\a\myguild\myguild\node_modules\electron\dist\electron.exe" "-r" "D:\a\myguild\myguild\node_modules\playwright-core\lib\server\electron\loader.js" "--inspect=0" "--remote-debugging-port=0" "./electron/main.js"
      - <launched> pid=3344
      - [pid=3344][out]
      - [pid=3344][err] Debugger listening on ws://127.0.0.1:63507/b3a48bba-d703-42e4-a908-8fc1ac916219
      - [pid=3344][err] For help, see: https://nodejs.org/en/docs/inspector
      - <ws connecting> ws://127.0.0.1:63507/b3a48bba-d703-42e4-a908-8fc1ac916219
      - <ws connected> ws://127.0.0.1:63507/b3a48bba-d703-42e4-a908-8fc1ac916219
      - [pid=3344][err] Debugger attached.


      21 |   console.log('[RedLine] 启动Electron应用进行红线安全测试...');
      22 |
    > 23 |   electronApp = await electron.launch({
         |                 ^
      24 |     args: ['./electron/main.js'],
      25 |     timeout: 30000,
      26 |     recordVideo: process.env.CI
        at D:\a\myguild\myguild\tests\e2e\security\enhanced\security-redlines.spec.ts:23:17

  4) [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:54:3 › 🚫 红线用例 1: 导航拦截（默认拒绝） › 外部导航应被拦截 - window.location.href 

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      60 |
      61 |     // 尝试导航到外部恶意站点
    > 62 |     const navigationAttempt = await firstWindow.evaluate(async () => {
         |                                                 ^
      63 |       const testUrls = [
      64 |         'https://malicious-site.com',
      65 |         'http://evil.example.com',
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:62:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-03a8c-应被拦截---window-location-href-electron-security-audit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      60 |
      61 |     // 尝试导航到外部恶意站点
    > 62 |     const navigationAttempt = await firstWindow.evaluate(async () => {
         |                                                 ^
      63 |       const testUrls = [
      64 |         'https://malicious-site.com',
      65 |         'http://evil.example.com',
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:62:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-03a8c-应被拦截---window-location-href-electron-security-audit-retry1\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-03a8c-应被拦截---window-location-href-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-security-redlines-03a8c-应被拦截---window-location-href-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      60 |
      61 |     // 尝试导航到外部恶意站点
    > 62 |     const navigationAttempt = await firstWindow.evaluate(async () => {
         |                                                 ^
      63 |       const testUrls = [
      64 |         'https://malicious-site.com',
      65 |         'http://evil.example.com',
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:62:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-03a8c-应被拦截---window-location-href-electron-security-audit-retry2\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

  5) [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:115:3 › 🚫 红线用例 1: 导航拦截（默认拒绝） › 外部导航应被拦截 - 链接点击 

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      117 |
      118 |     // 在页面中创建外部链接并尝试点击
    > 119 |     const linkClickTest = await firstWindow.evaluate(async () => {
          |                                             ^
      120 |       const testLinks = [
      121 |         'https://attacker.com/malware',
      122 |         'http://tracker.ads.com/pixel',
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:119:45

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-d9e7a--导航拦截（默认拒绝）-外部导航应被拦截---链接点击-electron-security-audit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      117 |
      118 |     // 在页面中创建外部链接并尝试点击
    > 119 |     const linkClickTest = await firstWindow.evaluate(async () => {
          |                                             ^
      120 |       const testLinks = [
      121 |         'https://attacker.com/malware',
      122 |         'http://tracker.ads.com/pixel',
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:119:45

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-d9e7a--导航拦截（默认拒绝）-外部导航应被拦截---链接点击-electron-security-audit-retry1\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-d9e7a--导航拦截（默认拒绝）-外部导航应被拦截---链接点击-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-security-redlines-d9e7a--导航拦截（默认拒绝）-外部导航应被拦截---链接点击-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      117 |
      118 |     // 在页面中创建外部链接并尝试点击
    > 119 |     const linkClickTest = await firstWindow.evaluate(async () => {
          |                                             ^
      120 |       const testLinks = [
      121 |         'https://attacker.com/malware',
      122 |         'http://tracker.ads.com/pixel',
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:119:45

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-d9e7a--导航拦截（默认拒绝）-外部导航应被拦截---链接点击-electron-security-audit-retry2\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

  6) [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:452:3 › 🚫 红线用例 3: 权限请求拒绝（默认拒绝） › 通知权限应被拒绝 

    Test timeout of 60000ms exceeded.

    Error: page.evaluate: Target page, context or browser has been closed

      453 |     console.log('🔍 测试通知权限拒绝...');
      454 |
    > 455 |     const notificationPermissionTest = await firstWindow.evaluate(async () => {
          |                                                          ^
      456 |       try {
      457 |         // 检查通知 API 是否可用
      458 |         if (!('Notification' in window)) {
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:455:58

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🚫-红线用例-3-权限请求拒绝（默认拒绝）-通知权限应被拒绝-electron-security-audit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Test timeout of 60000ms exceeded.

    Error: page.evaluate: Target page, context or browser has been closed

      453 |     console.log('🔍 测试通知权限拒绝...');
      454 |
    > 455 |     const notificationPermissionTest = await firstWindow.evaluate(async () => {
          |                                                          ^
      456 |       try {
      457 |         // 检查通知 API 是否可用
      458 |         if (!('Notification' in window)) {
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:455:58

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🚫-红线用例-3-权限请求拒绝（默认拒绝）-通知权限应被拒绝-electron-security-audit-retry1\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🚫-红线用例-3-权限请求拒绝（默认拒绝）-通知权限应被拒绝-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-security-redlines-🚫-红线用例-3-权限请求拒绝（默认拒绝）-通知权限应被拒绝-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    Test timeout of 60000ms exceeded.

    Error: page.evaluate: Target page, context or browser has been closed

      453 |     console.log('🔍 测试通知权限拒绝...');
      454 |
    > 455 |     const notificationPermissionTest = await firstWindow.evaluate(async () => {
          |                                                          ^
      456 |       try {
      457 |         // 检查通知 API 是否可用
      458 |         if (!('Notification' in window)) {
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:455:58

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🚫-红线用例-3-权限请求拒绝（默认拒绝）-通知权限应被拒绝-electron-security-audit-retry2\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

  7) [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:505:3 › 🛡️ 综合红线验证 › 三条红线用例稳定性测试 

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      506 |     console.log('🔍 执行三条红线综合稳定性测试...');
      507 |
    > 508 |     const comprehensiveTest = await firstWindow.evaluate(async () => {
          |                                                 ^
      509 |       const results = {
      510 |         navigationBlocks: 0,
      511 |         windowOpenBlocks: 0,
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:508:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🛡️-综合红线验证-三条红线用例稳定性测试-electron-security-audit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      506 |     console.log('🔍 执行三条红线综合稳定性测试...');
      507 |
    > 508 |     const comprehensiveTest = await firstWindow.evaluate(async () => {
          |                                                 ^
      509 |       const results = {
      510 |         navigationBlocks: 0,
      511 |         windowOpenBlocks: 0,
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:508:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🛡️-综合红线验证-三条红线用例稳定性测试-electron-security-audit-retry1\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🛡️-综合红线验证-三条红线用例稳定性测试-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-security-redlines-🛡️-综合红线验证-三条红线用例稳定性测试-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation.

      506 |     console.log('🔍 执行三条红线综合稳定性测试...');
      507 |
    > 508 |     const comprehensiveTest = await firstWindow.evaluate(async () => {
          |                                                 ^
      509 |       const results = {
      510 |         navigationBlocks: 0,
      511 |         windowOpenBlocks: 0,
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:508:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🛡️-综合红线验证-三条红线用例稳定性测试-electron-security-audit-retry2\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

  8) [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:617:3 › 🛡️ 综合红线验证 › 安全配置持久性验证 

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation

      622 |       console.log(`  - 执行第 ${i + 1} 轮安全验证...`);
      623 |
    > 624 |       const persistenceTest = await firstWindow.evaluate(async () => {
          |                                                 ^
      625 |         // 尝试各种攻击向量
      626 |         const attacks = [
      627 |           () => {
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:624:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🛡️-综合红线验证-安全配置持久性验证-electron-security-audit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation

      622 |       console.log(`  - 执行第 ${i + 1} 轮安全验证...`);
      623 |
    > 624 |       const persistenceTest = await firstWindow.evaluate(async () => {
          |                                                 ^
      625 |         // 尝试各种攻击向量
      626 |         const attacks = [
      627 |           () => {
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:624:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🛡️-综合红线验证-安全配置持久性验证-electron-security-audit-retry1\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🛡️-综合红线验证-安全配置持久性验证-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-security-redlines-🛡️-综合红线验证-安全配置持久性验证-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    Error: page.evaluate: Execution context was destroyed, most likely because of a navigation

      622 |       console.log(`  - 执行第 ${i + 1} 轮安全验证...`);
      623 |
    > 624 |       const persistenceTest = await firstWindow.evaluate(async () => {
          |                                                 ^
      625 |         // 尝试各种攻击向量
      626 |         const attacks = [
      627 |           () => {
        at D:\a\myguild\myguild\tests\e2e\security\security-redlines.spec.ts:624:49

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\artifacts\security-security-redlines-🛡️-综合红线验证-安全配置持久性验证-electron-security-audit-retry2\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

  9) [electron-security-audit] › tests\e2e\security\smoke-csp-header-or-meta.spec.ts:4:1 › CSP 以响应头或<meta>其一存在即可 

    TimeoutError: electron.launch: Timeout 30000ms exceeded.
    Call log:
      - <launching> "D:\a\myguild\myguild\node_modules\electron\dist\electron.exe" "-r" "D:\a\myguild\myguild\node_modules\playwright-core\lib\server\electron\loader.js" "--inspect=0" "--remote-debugging-port=0" "./electron/main.js"
      - <launched> pid=7772
      - [pid=7772][out]
      - [pid=7772][err] Debugger listening on ws://127.0.0.1:63704/fa7514c5-afb2-4870-98f0-a8cdc2abbb06
      - [pid=7772][err] For help, see: https://nodejs.org/en/docs/inspector
      - <ws connecting> ws://127.0.0.1:63704/fa7514c5-afb2-4870-98f0-a8cdc2abbb06
      - <ws connected> ws://127.0.0.1:63704/fa7514c5-afb2-4870-98f0-a8cdc2abbb06
      - [pid=7772][err] Debugger attached.


      3 |
      4 | test('CSP 以响应头或<meta>其一存在即可', async () => {
    > 5 |   const app = await electron.launch({
        |               ^
      6 |     args: ['./electron/main.js'],
      7 |     timeout: 30000,
      8 |   });
        at D:\a\myguild\myguild\tests\e2e\security\smoke-csp-header-or-meta.spec.ts:5:15

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: electron.launch: Timeout 30000ms exceeded.
    Call log:
      - <launching> "D:\a\myguild\myguild\node_modules\electron\dist\electron.exe" "-r" "D:\a\myguild\myguild\node_modules\playwright-core\lib\server\electron\loader.js" "--inspect=0" "--remote-debugging-port=0" "./electron/main.js"
      - <launched> pid=5468
      - [pid=5468][out]
      - [pid=5468][err] Debugger listening on ws://127.0.0.1:63719/648f58c9-30d6-485a-abba-1a04322e9925
      - [pid=5468][err] For help, see: https://nodejs.org/en/docs/inspector
      - <ws connecting> ws://127.0.0.1:63719/648f58c9-30d6-485a-abba-1a04322e9925
      - <ws connected> ws://127.0.0.1:63719/648f58c9-30d6-485a-abba-1a04322e9925
      - [pid=5468][err] Debugger attached.


      3 |
      4 | test('CSP 以响应头或<meta>其一存在即可', async () => {
    > 5 |   const app = await electron.launch({
        |               ^
      6 |     args: ['./electron/main.js'],
      7 |     timeout: 30000,
      8 |   });
        at D:\a\myguild\myguild\tests\e2e\security\smoke-csp-header-or-meta.spec.ts:5:15

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-smoke-csp-header-or-meta-CSP-以响应头或-meta-其一存在即可-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-smoke-csp-header-or-meta-CSP-以响应头或-meta-其一存在即可-electron-security-audit-retry1\trace.zip

    ───────────────────────────────────────────────────────────────────────────────────────  ────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: electron.launch: Timeout 30000ms exceeded.
    Call log:
      - <launching> "D:\a\myguild\myguild\node_modules\electron\dist\electron.exe" "-r" "D:\a\myguild\myguild\node_modules\playwright-core\lib\server\electron\loader.js" "--inspect=0" "--remote-debugging-port=0" "./electron/main.js"
      - <launched> pid=7064
      - [pid=7064][out]
      - [pid=7064][err] Debugger listening on ws://127.0.0.1:63738/cd697a44-da77-4240-aa77-3db0784c930d
      - [pid=7064][err] For help, see: https://nodejs.org/en/docs/inspector
      - <ws connecting> ws://127.0.0.1:63738/cd697a44-da77-4240-aa77-3db0784c930d
      - <ws connected> ws://127.0.0.1:63738/cd697a44-da77-4240-aa77-3db0784c930d
      - [pid=7064][err] Debugger attached.


      3 |
      4 | test('CSP 以响应头或<meta>其一存在即可', async () => {
    > 5 |   const app = await electron.launch({
        |               ^
      6 |     args: ['./electron/main.js'],
      7 |     timeout: 30000,
      8 |   });
        at D:\a\myguild\myguild\tests\e2e\security\smoke-csp-header-or-meta.spec.ts:5:15

  10) [electron-security-audit] › tests\e2e\security-smoke.spec.ts:3:1 › 安全护栏生效（CSP & 禁用 Node） ─────

    Error: expect(received).toBeTruthy()

    Received: undefined

      17 |       ?.getAttribute('content')
      18 |   );
    > 19 |   expect(csp).toBeTruthy();
         |               ^
      20 |
      21 |   await app.close();
      22 | });
        at D:\a\myguild\myguild\tests\e2e\security-smoke.spec.ts:19:15

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: expect(received).toBeTruthy()

    Received: undefined

      17 |       ?.getAttribute('content')
      18 |   );
    > 19 |   expect(csp).toBeTruthy();
         |               ^
      20 |
      21 |   await app.close();
      22 | });
        at D:\a\myguild\myguild\tests\e2e\security-smoke.spec.ts:19:15

    attachment #1: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results\artifacts\security-smoke-安全护栏生效（CSP-禁用-Node）-electron-security-audit-retry1\trace.zip
    Usage:

        npx playwright show-trace test-results\artifacts\security-smoke-安全护栏生效（CSP-禁用-Node）-electron-security-audit-retry1\trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #2 ───────────────────────────────────────────────────────────────────────────────────────

    Error: expect(received).toBeTruthy()

    Received: undefined

      17 |       ?.getAttribute('content')
      18 |   );
    > 19 |   expect(csp).toBeTruthy();
         |               ^
      20 |
      21 |   await app.close();
      22 | });
        at D:\a\myguild\myguild\tests\e2e\security-smoke.spec.ts:19:15

  10 failed
    [electron-security-audit] › tests\e2e\security\enhanced\enhanced-csp-security.spec.ts:44:3 › CSP策略安全验证 › CSP应该阻止内联脚本执行 
    [electron-security-audit] › tests\e2e\security\enhanced\enhanced-electron-security.spec.ts:44:3 › Electron安全基线验证 › 渲染进程应该无法访问Node.js API 
    [electron-security-audit] › tests\e2e\security\enhanced\security-redlines.spec.ts:57:5 › 🔴 Electron安全红线测试 - ADR-0002核心拦截 › 红线1: 权限请求拦截 (默认拒绝) › 地理位置权限应被默认拒绝 
    [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:54:3 › 🚫 红线用例 1: 导航拦截（默认拒绝） › 外部导航应被拦截 - window.location.href 
    [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:115:3 › 🚫 红线用例 1: 导航拦截（默认拒绝） › 外部导航应被拦截 - 链接点击 
    [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:452:3 › 🚫 红线用例 3: 权限请求拒绝（默认拒绝） › 通知权限应被拒绝 
    [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:505:3 › 🛡️ 综合红线验证 › 三条红线用例稳定性测试 
    [electron-security-audit] › tests\e2e\security\security-redlines.spec.ts:617:3 › 🛡️ 综合红线验证 › 安全配置持久性验证 
    [electron-security-audit] › tests\e2e\security\smoke-csp-header-or-meta.spec.ts:4:1 › CSP 以响应头或<meta>其一存在即可 
    [electron-security-audit] › tests\e2e\security-smoke.spec.ts:3:1 › 安全护栏生效（CSP & 禁用 Node） ───────
  18 did not run
  18 passed (10.8m)
Error: Process completed with exit code 1.