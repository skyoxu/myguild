{
  "permissions": {
    "allow": [
      "Bash(set GITHUB_REF=refs/heads/feature/test)",
      "Bash(git push:*)",
      "mcp__zen-mcp-server__thinkdeep",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(npx actionlint:*)",
      "mcp__brave-search__brave_web_search",
      "Bash(npx:*)",
      "Bash(git add:*)",
      "WebFetch(domain:github.com)",
      "Bash(npm run lint)",
      "Bash(npm install:*)",
      "Bash(git commit:*)",
      "Bash(echo \"EXIT_CODE: $?\")",
      "Bash(git rm:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:*)",
      "Bash(npm test)",
      "Bash(gh repo view:*)",
      "Bash(find:*)",
      "mcp__zen-mcp-server__chat",
      "Bash(node:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(grep:*)",
      "Bash(done)",
      "Read(//c//**)",
      "Bash(git checkout:*)",
      "Bash(npm run format:*)",
      "Bash(gh api:*)",
      "Bash(cat:*)",
      "Bash(Select-String:*)",
      "Bash(powershell:*)",
      "Bash(sed:*)",
      "mcp__zen-mcp-server__debug",
      "Bash(gh run list:*)",
      "Bash(actionlint:*)",
      "Bash(rg:*)",
      "Bash(curl:*)",
      "Bash(go install:*)",
      "Bash(py -m pip list:*)",
      "Bash(py:*)",
      "Bash(npm run overlay:gen:*)",
      "Bash(npm run overlay:check:*)",
      "Bash(git config:*)",
      "Bash(npm config:*)",
      "Bash(git reset:*)",
      "Bash(.actionlint.exe .github/workflows/release-emergency-rollback.yml)",
      "Bash(./actionlint.exe:*)",
      "Bash(npm test:*)",
      "Bash(git diff:*)",
      "Bash(__NEW_LINE__ echo \"测试 lint:src 命令（严格检查src目录）：\")",
      "Bash(echo:*)",
      "Bash(__NEW_LINE__ echo \"测试 lint:tests 命令（放宽检查tests目录）：\")",
      "Bash(__NEW_LINE__ echo \"测试完整 lint 命令（组合检查）：\")",
      "Bash(awk:*)",
      "Bash(ESLINT_MAX_WARNINGS=50 node scripts/eslint-baseline-gate.mjs)",
      "Bash(where trufflehog)",
      "Bash(pwsh:*)",
      "Bash([ -f \".trufflehog-exclude.txt\" ])",
      "Bash(trufflehog:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run build:*)",
      "Bash(gh workflow:*)",
      "Bash(npm audit:*)",
      "Bash(npm run prettier:check:*)",
      "Bash(npm run:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": ["C:\\c\\buildgame"]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": ["zen"]
}
